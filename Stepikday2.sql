DROP TABLE IF EXISTS book;
DROP TABLE IF EXISTS supply;

CREATE TABLE book (
    book_id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    title VARCHAR (50),
    author VARCHAR (30),
    price DECIMAL (8, 2),
    amount INT
);

CREATE TABLE supply (
    supply_id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    title VARCHAR (50),
    author VARCHAR (30),
    price DECIMAL (8, 2),
    amount INT
);
    
INSERT INTO book (title, author, price, amount)
VALUES 
    ("Мастер и Маргарита", "Булгаков М.А.", 670.99, 3),
    ("Белая гвардия", "Булгаков М.А.", 540.50, 5),
    ("Идиот", "Достоевский Ф.М.", 460.00, 10),
    ("Братья Карамазовы", "Достоевский Ф.М.", 799.01, 3),
    ("Игрок", "Достоевский Ф.М.", 480.50, 10),
    ("Стихотворения и поэмы", "Есенин С.А.", 650.00, 15);
    
INSERT INTO supply (title, author, price, amount)
VALUES 
    ("Лирика", "Пастернак Б.Л.", 518.99, 2),
    ("Черный человек", "Есенин С.А.", 570.20, 6),
    ("Белая гвардия", "Булгаков М.А.", 540.50, 7),
    ("Идиот", "Достоевский Ф.М.", 360.80, 3);
    
-- Отобрать различные (уникальные) элементы столбца amount таблицы book

SELECT DISTINCT amount FROM book;

-- Посчитать, количество различных книг и количество экземпляров книг каждого автора , хранящихся на складе.  Столбцы назвать Автор, Различных_книг и Количество_экземпляров соответственно.

SELECT author AS Автор, COUNT(title) AS Различных_книг, SUM(amount) AS Количество_экземпляров 
FROM book
GROUP BY author;

-- Вывести фамилию и инициалы автора, минимальную, максимальную и среднюю цену книг каждого автора . Вычисляемые столбцы назвать Минимальная_цена, Максимальная_цена и Средняя_цена соответственно.

SELECT author, MIN(price) AS Минимальная_цена, MAX(price) AS Максимальная_цена, AVG(price) AS Средняя_цена
FROM book
GROUP BY author;
    
-- Для каждого автора вычислить суммарную стоимость книг S (имя столбца Стоимость), а также вычислить налог на добавленную стоимость  для полученных сумм (имя столбца НДС ) , который включен в стоимость и составляет k = 18%,  а также стоимость книг  (Стоимость_без_НДС) без него. Значения округлить до двух знаков после запятой

SELECT author, SUM(price * amount) AS Стоимость, ROUND((SUM(price * amount) * 0.18) / (1 + 0.18), 2) AS НДС, ROUND(SUM(price * amount) - (SUM(price * amount) * 0.18) / (1 + 0.18), 2) AS Стоимость_без_НДС 
FROM book
GROUP BY author;

-- Вывести  цену самой дешевой книги, цену самой дорогой и среднюю цену уникальных книг на складе. Названия столбцов Минимальная_цена, Максимальная_цена, Средняя_цена соответственно. Среднюю цену округлить до двух знаков после запятой.

SELECT DISTINCT MIN(price) AS Минимальная_цена, MAX(price) AS Максимальная_цена, ROUND(AVG(price), 2) AS Средняя_цена
FROM book;

-- Вычислить среднюю цену и суммарную стоимость тех книг, количество экземпляров которых принадлежит интервалу от 5 до 14, включительно. Столбцы назвать Средняя_цена и Стоимость, значения округлить до 2-х знаков после запятой.
    
SELECT ROUND(AVG(price), 2) AS Средняя_цена, SUM(price * amount) AS Стоимость
FROM book
WHERE amount BETWEEN 5 AND 14;

-- Посчитать стоимость всех экземпляров каждого автора без учета книг «Идиот» и «Белая гвардия». В результат включить только тех авторов, у которых суммарная стоимость книг (без учета книг «Идиот» и «Белая гвардия») более 5000 руб. Вычисляемый столбец назвать Стоимость. Результат отсортировать по убыванию стоимости.

SELECT author, SUM(price * amount) AS Стоимость
FROM book
WHERE title <> "Идиот" AND title <> "Белая гвардия"
GROUP BY author
HAVING SUM(price * amount) > 5000
ORDER BY SUM(price * amount) DESC;

-- Узнать сколько авторов, у которых есть книги со стоимостью более 500 и количеством более 1 шт на складе, при количестве различных названий произведений не менее 2-х. Вывести автора, количество различных произведений автора, минимальную цену и количество книг на складе. 

SELECT author AS Автор, COUNT(title) AS Количество_произведений, MIN(price) AS Минимальная_цена, SUM(amount) AS Число_книг
FROM book
WHERE price > 500 AND amount > 1
GROUP BY author
HAVING COUNT(title) >= 2;

-- Вывести информацию (автора, название и цену) о  книгах, цены которых меньше или равны средней цене книг на складе. Информацию вывести в отсортированном по убыванию цены виде. Среднее вычислить как среднее по цене книги.
 
 SELECT author, title, price 
 FROM book
 WHERE price <= (
     SELECT AVG(price) 
     FROM book)
ORDER BY price DESC;

-- Вывести информацию (автора, название и цену) о тех книгах, цены которых превышают минимальную цену книги на складе не более чем на 150 рублей в отсортированном по возрастанию цены виде.

SELECT author, title, price
FROM book
WHERE ABS(price - (SELECT MIN(price) FROM book)) <= 150
ORDER BY price;

-- Вывести информацию (автора, книгу и количество) о тех книгах, количество экземпляров которых в таблице book не дублируется.

SELECT author, title, amount
FROM book
WHERE amount IN (
    SELECT amount FROM book
    GROUP BY amount
    HAVING count(amount) = 1);

-- Вывести информацию о книгах(автор, название, цена), цена которых меньше самой большой из минимальных цен, вычисленных для каждого автора.

SELECT author, title, price
FROM book
WHERE price < ANY (
    SELECT MIN(price)
    FROM book
    GROUP BY author);
    
-- Посчитать сколько и каких экземпляров книг нужно заказать поставщикам, чтобы на складе стало одинаковое количество экземпляров каждой книги, равное значению самого большего количества экземпляров одной книги на складе. Вывести название книги, ее автора, текущее количество экземпляров на складе и количество заказываемых экземпляров книг. Последнему столбцу присвоить имя Заказ. В результат не включать книги, которые заказывать не нужно.

SELECT title, author, amount, 
	(SELECT MAX(amount) FROM book) - amount AS Заказ FROM book
WHERE amount != (SELECT MAX(amount) FROM book);

-- Вывести все книги, количество которых не равно минимальному и максимальному количеству имеющихся книг, не используя функции MIN и MAX.

SELECT title, author, price, amount
FROM book
WHERE amount < ANY(
    SELECT amount FROM book) 
    AND amount > ANY(
    SELECT amount FROM book);

    
	


 



 
    
